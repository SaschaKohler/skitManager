version: '3.7'

services:
    app:
        build:
            args:
                user: sebi0815
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: skitmanager-l
        container_name: skitmanager-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - code-network
  ## PHP-FPM ##############################################
    #  laravel:
    #    build:
    #      context: ./
    #    environment:
    #      - PUID=${DOCKER_PUID}
    #      - PGID=${DOCKER_PGID}
    #    volumes:
    #      - ./:/srv/api
    #    extra_hosts:
    #      -   "host.docker.internal:host-gateway"
    #    depends_on:
    #      - pgsql
    #    networks:
    #      - code-network

    #  ### MAILHOG Server #########################################
#  mailhog:
#    image: mailhog/mailhog:latest
#    restart: always
#    ports:
#      - "8025:8025"
#    networks:
#      - code-network
#
#  ### NGINX Server #########################################
    nginx:
        image: nginx:1.17-alpine
        container_name: skitmanager-nginx
        restart: unless-stopped
        ports:
         - "${NGINX_HTTP_PORT}:80
        volumes:
         - ./:/var/www
         - ./docker/nginx:/etc/nginx/conf.d
        networks:
        - code-network
#  nginx:
#    build:
#      context: ./docker/nginx
#    ports:
#      - "${NGINX_HTTP_PORT}:80"
#      - "443:443"
#    volumes:
#      - ./:/srv/api
#      - ./admin/dist:/srv/api/admin
#      #      - ./docker/nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf
#      - ./certbot/www:/var/www/certbot/
#      - ./certbot/conf/:/etc/letsencrypt/ssl/
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
#    restart: unless-stopped
#    depends_on:
#      - laravel
#    networks:
#      - code-network
#
#  ### CERT_BOT #######################################################
#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./certbot/www:/var/www/certbot/
#      - ./certbot/conf/:/etc/letsencrypt/
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#  #    command: certonly --webroot --webroot-path=/var/www/certbot/ --email sascha.cloud01@gmail.com  --agree-tos --no-eff-email --staging -d skit-software.at  -d www.skit-software.at
#

  #### PG_SQL ################################################
    pgsql:
        image: "postgres" # use latest official postgres version
        ports:
        - 5432:5432
        environment:
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
            POSTGRES_DB: "${DB_DATABASE}"
        volumes:
         - pgsql-admin-data:/var/lib/postgresql/data/ # persist data even if container shuts down
        networks:
         - code-network

#  ### PG_ADMIN #########################################################
#  pgadmin:
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"
#      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
#    ports:
#      - "5050:80"
#    networks:
#      - code-network

### Volumes & Network #########################################################
volumes:
  pgsql-admin-data: # named volumes can be managed easier using docker-compose

networks:
  code-network:
    driver: bridge


